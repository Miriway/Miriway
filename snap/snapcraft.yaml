name: miriway
adopt-info: miriway
summary: "Miriway: a graphical shell to configure for your desktop environment"
description: |
  Miriway isn’t a full featured desktop environment but it could, in principle, 
  be used to build one.

  It also isn’t fully “desktop ready” as there are quite a lot of “papercut” 
  concerns that need to be fixed in Mir.

  It does, however, provide a way to test Mir and other components of a desktop 
  environment that makes these “papercuts” visible and much more likely to be fixed.
website: https://github.com/Miriway
contact: https://github.com/Miriway/Miriway/issues
source-code: https://github.com/Miriway/Miriway

confinement: classic
base: core24

platforms:
  amd64:
  arm64:
  armhf:

package-repositories:
  - type: apt
    ppa: mir-team/release

apps:
  miriway:
    command-chain:
      # Workaround for classic snaps having a confinement profile
      - usr/local/bin/miriway-unconfine
    command: &_command usr/local/bin/miriway
    environment: &_environment
      # Prep for Mir
      MIR_SERVER_PLATFORM_PATH: ${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/mir/server-platform
      __EGL_VENDOR_LIBRARY_DIRS: $SNAP/etc/glvnd/egl_vendor.d:$SNAP/usr/share/glvnd/egl_vendor.d
      LIBGL_DRIVERS_PATH: $SNAP/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/dri
      LIBINPUT_QUIRKS_DIR: ${SNAP}/usr/share/libinput
      PATH: ${SNAP}/bin/:${SNAP}/usr/bin/:${SNAP}/usr/local/bin/:${PATH}
      # For "reasons" this is being set despite this being a classic snap. This overwrites the nonsense
      LD_LIBRARY_PATH: ""

  vnc-server:
    command-chain:
      - usr/local/bin/miriway-unconfine
      - bin/miriway.vnc-server
    command: *_command
    environment: *_environment

  run:
    command-chain:
      - usr/local/bin/miriway-unconfine
    command: usr/local/bin/miriway-run
    environment: *_environment

parts:
  miriway:
    build-attributes:
      - enable-patchelf
    override-pull: |
      craftctl default
      # work around https://github.com/diddlesnaps/snapcraft-multiarch-action/issues/22
      git config --global --add safe.directory ${CRAFT_PART_SRC}
      server_version=`git describe | cut -c 2-`
      mir_version=`LANG=C apt-cache policy mir-graphics-drivers-desktop | sed -rne 's/^\s+Candidate:\s+([^-]*)-.+$/\1/p'`
      craftctl set version=$server_version-mir${mir_version/+/}
      if echo $mir_version | grep -e '+dev' -e '~rc' -q; then craftctl set grade=devel; else craftctl set grade=stable; fi
    plugin: cmake
    source: .
    build-packages:
      - pkg-config
      - libmiral-dev
      - libboost-filesystem-dev
      - libfreetype6-dev
      - libwayland-dev
      - libxkbcommon-dev
      - g++
      - make
      - git
    stage-packages:
      # Stage libmiral<n> indirectly as we cannot (since core22) do `try:/else:`
      - libmiral-dev
      - mir-graphics-drivers-desktop
      - mir-platform-graphics-virtual
      - mir-graphics-drivers-nvidia
      - libfreetype6
    prime:
      - -lib/udev
      - -usr/doc
      - -usr/doc-base
      - -usr/share/applications
      - -usr/share/apport
      - -usr/share/bug
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/icons
      - -usr/share/libdrm
      - -usr/share/libwacom
      - -usr/share/lintian
      - -usr/share/man
      - -usr/share/pkgconfig
      - -etc/xdg/xdg-miriway/miriway-shell.config-snap
      # Do not prime the `-dev` part of libmiral-dev, we don't need it (just the libmiral<n> dependency)
      - -usr/include
      - -usr/lib/*/pkgconfig
      - -usr/lib/*/libmir*.so

  example-configs:
    plugin: dump
    source: example-configs
    organize:
      miriway-config-alan_g.bash: example-configs/alan_g.bash
      miriway-config-LXQT.bash: example-configs/LXQT.bash
      miriway-config-MATE.bash: example-configs/MATE.bash
      miriway-config-SWAY.bash: example-configs/SWAY.bash
      miriway-config-XFCE.bash: example-configs/XFCE.bash

  snap-utils:
    plugin: dump
    source: snap-utils

  mesa-patchelf:
    build-attributes:
      - enable-patchelf
    plugin: nil
    stage-packages:
    - libgl1-mesa-dri
    - libtinfo6
    # included in this part because they try to pull in mesa bits
    - sway-notification-center
    - swaybg
    - swaylock
    - synapse
    - xwayland
    - yambar
    stage:
      # The libraries in .../dri need no-patchelf, so they come from the mesa-unpatched part
      - -usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/dri

  mesa-no-patchelf:
    plugin: nil
    stage-packages:
      - libgl1-mesa-dri
    build-attributes:
      - no-patchelf # Otherwise snapcraft may strip the build ID and cause the driver to crash
    stage:
      # Only the libraries in .../dri need to not be patched, the rest come from the mesa part
      - usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/dri
