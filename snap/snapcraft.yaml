name: miriway
adopt-info: miriway
summary: "Miriway: a graphical shell to configure for your desktop environment"
description: |
  Miriway isnâ€™t a full featured desktop environment by itself, but it could be
  used to build one. To provide a starting point here are some setup scripts:  

  * /snap/miriway/current/example-configs/LXQT.bash
  * /snap/miriway/current/example-configs/MATE.bash
  * /snap/miriway/current/example-configs/SWAY.bash
  * /snap/miriway/current/example-configs/XFCE.bash
  * /snap/miriway/current/example-configs/alan_g.bash
  
  These are provided on a "best effort" basis as they rely on the current level 
  of Wayland support from the corresponding components on the host OS. 
  
  Miriway is based on Mir: https://mir-server.io/

website: https://github.com/Miriway
contact: [https://github.com/Miriway/Miriway/discussions, https://matrix.to/#/#miriway:matrix.org]
issues: https://github.com/Miriway/Miriway/issues
source-code: https://github.com/Miriway/Miriway

confinement: classic
base: core24

platforms:
  amd64:
  arm64:
  armhf:

package-repositories:
  - type: apt
    ppa: mir-team/release

apps:
  miriway:
    command-chain: &command_chain
      # Workaround for classic snaps having a confinement profile
      - bin/miriway-unconfine
    command: &_command usr/bin/miriway
    environment: &_environment
      # Prep for Mir
      MIR_SERVER_PLATFORM_PATH: ${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/mir/server-platform
      __EGL_VENDOR_LIBRARY_DIRS: $SNAP/etc/glvnd/egl_vendor.d:$SNAP/usr/share/glvnd/egl_vendor.d
      LIBGL_DRIVERS_PATH: $SNAP/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/dri
      LIBINPUT_QUIRKS_DIR: ${SNAP}/usr/share/libinput
      PATH: ${SNAP}/bin/:${SNAP}/usr/bin/:${SNAP}/usr/local/bin/:${PATH}
      # Warning: This variable is used by xdg-desktop-portal to force it to look in
      # a particular directory for .portal files. Unfortunately, xdg-desktop-portal
      # does not respect XDG_DATA_DIRS so we are forced to use this workaround. This
      # environment variable is only intended to be used in their testing environment
      # but we are abusing it for our purposes here.
      XDG_DESKTOP_PORTAL_DIR: $SNAP/usr/share/xdg-desktop-portal/portals/
      DRIRC_CONFIGDIR: ${SNAP}/usr/share/drirc.d

  session:
    command-chain: *command_chain
    command: bin/miriway-session
    environment: *_environment

  vnc-server:
    command-chain:
      - bin/miriway-unconfine
      - bin/miriway.vnc-server
    command: *_command
    environment: *_environment

  run:
    command-chain:
      - bin/miriway-unconfine
    command: usr/bin/miriway-run
    environment: *_environment

parts:
  miriway:
    build-attributes:
      - enable-patchelf
    override-pull: |
      craftctl default
      # work around https://github.com/diddlesnaps/snapcraft-multiarch-action/issues/22
      git config --global --add safe.directory ${CRAFT_PART_SRC}
      server_version=`git describe | cut -c 2-15`
      mir_version=`LANG=C apt-cache policy mir-graphics-drivers-desktop | sed -rne 's/^\s+Candidate:\s+([^-]*)-.+$/\1/p'`
      craftctl set version=$server_version-mir${mir_version}
      if echo $mir_version | grep -e '+dev' -e '~rc' -q; then craftctl set grade=devel; else craftctl set grade=stable; fi
    plugin: cmake
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
    source: .
    build-packages:
      - pkg-config
      - libmiral-dev
      - libboost-filesystem-dev
      - libfreetype6-dev
      - libwayland-dev
      - libxkbcommon-dev
      - g++
      - make
      - git
    stage-packages:
      # Stage libmiral<n> indirectly as we cannot (since core22) do `try:/else:`
      - libmiral-dev
      - mir-graphics-drivers-desktop
      - mir-platform-graphics-virtual
      - mir-graphics-drivers-nvidia
      - libfreetype6
      - xdg-desktop-portal
      # included in this part because they are used in the snap
      - sway-notification-center
      - swaybg
      - swaylock
      - synapse
      - xwayland
      - yambar
    prime:
      - -lib/udev
      - -usr/doc
      - -usr/doc-base
      - -usr/share/applications
      - -usr/share/apport
      - -usr/share/bug
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/icons
      - -usr/share/libdrm
      - -usr/share/libwacom
      - -usr/share/lintian
      - -usr/share/man
      - -usr/share/pkgconfig
      - -etc/xdg/xdg-miriway/miriway-shell.config-snap
      # We use another miriway-session (from snap-utils), avoid confusion
      - -usr/bin/miriway-session
      # Do not prime the `-dev` part of libmiral-dev, we don't need it (just the libmiral<n> dependency)
      - -usr/include
      - -usr/lib/*/pkgconfig
      - -usr/lib/*/libmir*.so
      # The libgallium* library needs no-patchelf, so it comes from the mesa-unpatched part
      - -usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/libgallium*

  example-configs:
    plugin: dump
    source: example-configs
    organize:
      miriway-config-alan_g.bash: example-configs/alan_g.bash
      miriway-config-LXQT.bash: example-configs/LXQT.bash
      miriway-config-MATE.bash: example-configs/MATE.bash
      miriway-config-SWAY.bash: example-configs/SWAY.bash
      miriway-config-XFCE.bash: example-configs/XFCE.bash

  snap-utils:
    plugin: dump
    source: snap-utils

  systemd:
    plugin: dump
    source: systemd

  mesa-no-patchelf:
    plugin: nil
    stage-packages:
      - libgl1-mesa-dri
    build-attributes:
      - no-patchelf # Otherwise snapcraft may strip the build ID and cause the driver to crash
    stage:
      - usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/libgallium*

  xdg-desktop-portal-wlr:
    plugin: meson
    source: https://github.com/emersion/xdg-desktop-portal-wlr.git
    source-tag: v0.5.0
    build-attributes:
      - enable-patchelf
    build-packages:
      - meson
      - ninja-build
      - libpipewire-0.3-dev
      - libwayland-dev
      - libinih-dev
      - libsystemd-dev
      - wayland-protocols
    stage-packages:
      - slurp
      - libinih1
      - libwayland-cursor0
      - libcairo2
